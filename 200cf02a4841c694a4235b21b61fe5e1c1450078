{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ce35f85e_cf6fcf55",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1021821
      },
      "writtenOn": "2024-10-23T19:10:41Z",
      "side": 1,
      "message": "my main concern here: does this implementation is consistent with what real iOS do? E.g. if one copies plist with serialized NSData from iOS device, would touchHLE read it? and vice versa\n\nmaybe a test program is need to be written to confirm that",
      "revId": "200cf02a4841c694a4235b21b61fe5e1c1450078",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7480ed1_339db7db",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1038408
      },
      "writtenOn": "2024-10-24T16:06:58Z",
      "side": 1,
      "message": "If someone with a real device or emulator could load the game once and get the plist we could verify.",
      "parentUuid": "ce35f85e_cf6fcf55",
      "revId": "200cf02a4841c694a4235b21b61fe5e1c1450078",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d6759ed_cd18af4d",
        "filename": "src/frameworks/foundation/ns_property_list_serialization.rs",
        "patchSetId": 3
      },
      "lineNbr": 133,
      "author": {
        "id": 1021821
      },
      "writtenOn": "2024-10-23T19:10:41Z",
      "side": 1,
      "message": "why do you need to change that?",
      "revId": "200cf02a4841c694a4235b21b61fe5e1c1450078",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1731da44_20ee34d5",
        "filename": "src/frameworks/foundation/ns_property_list_serialization.rs",
        "patchSetId": 3
      },
      "lineNbr": 133,
      "author": {
        "id": 1038408
      },
      "writtenOn": "2024-10-24T16:06:58Z",
      "side": 1,
      "message": "i expected that question :)\n\nwithout the change i was getting :\nType mismatch when sending message initWithBytesNoCopy:length: to 0x3786ebf0!\n- Message has type: TypeId(0xe80a41ecf4c869900f4876b4ac1f90dd) / (touchHLE::mem::Ptr\u003ctouchHLE::objc::objects::objc_object, true\u003e, (touchHLE::mem::Ptr\u003ctouchHLE::objc::objects::objc_object, true\u003e, touchHLE::objc::selectors::SEL, touchHLE::mem::Ptr\u003cu8, true\u003e, u32))\n- Method expects type: TypeId(0xbb0b12a512c58b6e0a10c215e9c5304c) / (touchHLE::mem::Ptr\u003ctouchHLE::objc::objects::objc_object, true\u003e, (touchHLE::mem::Ptr\u003ctouchHLE::objc::objects::objc_object, true\u003e, touchHLE::objc::selectors::SEL, touchHLE::mem::Ptr\u003ccore::ffi::c_void, true\u003e, u32))\n\nso i changed it to return voidptr. I guess it never worked properly before since initWithBytesNoCopy requires MutVoidPtr",
      "parentUuid": "4d6759ed_cd18af4d",
      "revId": "200cf02a4841c694a4235b21b61fe5e1c1450078",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3283465_2a9bdaf6",
        "filename": "src/frameworks/foundation/ns_property_list_serialization.rs",
        "patchSetId": 3
      },
      "lineNbr": 236,
      "author": {
        "id": 1021821
      },
      "writtenOn": "2024-10-23T19:10:41Z",
      "side": 1,
      "message": "please remove extra indentation here",
      "revId": "200cf02a4841c694a4235b21b61fe5e1c1450078",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0295626b_ca41626c",
        "filename": "src/frameworks/foundation/ns_property_list_serialization.rs",
        "patchSetId": 3
      },
      "lineNbr": 236,
      "author": {
        "id": 1038408
      },
      "writtenOn": "2024-10-24T16:06:58Z",
      "side": 1,
      "message": "ups, will fix",
      "parentUuid": "f3283465_2a9bdaf6",
      "revId": "200cf02a4841c694a4235b21b61fe5e1c1450078",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22a4f6e3_a119e942",
        "filename": "src/frameworks/foundation/ns_user_defaults.rs",
        "patchSetId": 3
      },
      "lineNbr": 148,
      "author": {
        "id": 1021821
      },
      "writtenOn": "2024-10-23T19:10:41Z",
      "side": 1,
      "message": "can this really happen?",
      "revId": "200cf02a4841c694a4235b21b61fe5e1c1450078",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2b4e690_3d45174b",
        "filename": "src/frameworks/foundation/ns_user_defaults.rs",
        "patchSetId": 3
      },
      "lineNbr": 148,
      "author": {
        "id": 1038408
      },
      "writtenOn": "2024-10-24T16:06:58Z",
      "side": 1,
      "message": "Honestly, dont know enough about the internals. Just wanted to be safe.",
      "parentUuid": "22a4f6e3_a119e942",
      "revId": "200cf02a4841c694a4235b21b61fe5e1c1450078",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}